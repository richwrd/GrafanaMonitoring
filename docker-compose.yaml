services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_SERVER_HTTP_PORT=3010
    ports:
      - "3010:3010"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3010/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - nginx_proxy
      - grafana_network 

  grafana-agent:
    image: grafana/agent:latest
    container_name: grafana-agent
    hostname: grafana-agent
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yaml:/etc/agent/config.yaml
      - ./grafana-agent/data:/var/lib/grafana-agent  # Added volume for persistent data
    command:
      - "--config.file=/etc/agent/config.yaml"
    ports:
      - "9090:9090"  # Prometheus UI port
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - postgresql_network
      - grafana_network

  grafana-mimir:
    image: grafana/mimir:latest
    container_name: grafana-mimir
    hostname: grafana-mimir
    restart: unless-stopped
    command: 
      - "-config.file=/etc/mimir/config.yaml"
    volumes:
      - ./grafana-mimir/config.yaml:/etc/mimir/config.yaml
      - mimir-data:/data
    ports:
      - "9009:9009"  # Mimir API port
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9009/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - postgresql_network
      - grafana_network

volumes:
  grafana-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/sdb1/stacks/grafana/data
  mimir-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/sdb1/stacks/grafana/mimir_data
  grafana-agent-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/sdb1/stacks/grafana/agent_data
  
networks:
  nginx_proxy:
    external: true
  grafana_network:
    external: true